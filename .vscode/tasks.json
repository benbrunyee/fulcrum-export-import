{
  "version": "2.0.0",
  "tasks": [
    // IPMR Full Transformation
    {
      "label": "Find Differences (IPMR)",
      "command": "python",
      "type": "process",
      "args": [
        "find_differences.py",
        "--debug",
        "--parent_dir",
        "IPMR",
        "--base_dir",
        "survey",
        "--base_prefix",
        "survey",
        "--target_dir",
        "invasive_plants_management_records",
        "--target_prefix",
        "invasive_plants_management_records"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Transform (IPMR)",
      "command": "python",
      "type": "process",
      "args": [
        "transform.py",
        "--parent_dir",
        "IPMR",
        "--target_dir",
        "invasive_plants_management_records",
        "--target_prefix",
        "invasive_plants_management_records",
        "--site_location_file",
        "site_details\\site_details.csv",
        "--client_name_col",
        "client_names",
        "--acc_ref_col",
        "pba_reference",
        "--transform_type",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Full IPMR Transformation",
      "dependsOn": ["Find Differences (IPMR)", "Transform (IPMR)"],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },

    // IPMR SV Full Transformation
    {
      "label": "Find Differences (IPMR - SV)",
      "command": "python",
      "type": "process",
      "args": [
        "find_differences.py",
        "--debug",
        "--parent_dir",
        "IPMR_SV",
        "--base_dir",
        "site_visit_records",
        "--base_prefix",
        "site_visit_records",
        "--target_dir",
        "invasive_plants_management_records",
        "--target_prefix",
        "invasive_plants_management_records",
        "--skip_prompt_matching"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Transform (IPMR - SV)",
      "command": "python",
      "type": "process",
      "args": [
        "transform.py",
        "--parent_dir",
        "IPMR_SV",
        "--target_dir",
        "invasive_plants_management_records",
        "--target_prefix",
        "invasive_plants_management_records",
        "--site_location_file",
        "site_details\\site_details.csv",
        "--client_name_col",
        "client_names",
        "--acc_ref_col",
        "pba_reference",
        "--transform_type",
        "site_visits",
        "--survey_dir",
        "survey",
        "--survey_dir_prefix",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Full IPMR SV Transformation",
      "dependsOn": ["Find Differences (IPMR - SV)", "Transform (IPMR - SV)"],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },

    // S Full Transformation
    {
      "label": "Find Differences (S)",
      "command": "python",
      "type": "process",
      "args": [
        "find_differences.py",
        "--parent_dir",
        "S",
        "--base_dir",
        "survey",
        "--base_prefix",
        "survey",
        "--target_dir",
        "survey_legacy",
        "--target_prefix",
        "survey_legacy"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Transform (S)",
      "command": "python",
      "type": "process",
      "args": [
        "transform.py",
        "--parent_dir",
        "S",
        "--target_dir",
        "survey_legacy",
        "--target_prefix",
        "survey_legacy",
        "--site_location_file",
        "site_details\\site_details.csv",
        "--client_name_col",
        "client_name",
        "--has_site_location_link",
        "--transform_type",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "Full S Transformation",
      "dependsOn": ["Find Differences (S)", "Transform (S)"],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },

    // KSMP & JKMR Import
    {
      "label": "KSMP Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--base_name",
        "KSMP",
        "--yes",
        "--form_name",
        "BB - SA (IMPORT)",
        "--source_dir",
        "new_files\\KSMP\\new_records",
        "--type",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "JKMR Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--base_name",
        "JKMR",
        "--yes",
        "--form_name",
        "BB - SA (IMPORT)",
        "--source_dir",
        "new_files\\JKMR\\new_records",
        "--type",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "SV Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--yes",
        "--base_name",
        "KSMP",
        "--form_name",
        "BB - SITE VISIT RECORDS (IMPORT)",
        "--source_dir",
        "new_files\\SV\\new_records",
        "--type",
        "site_visits"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "JKMR SV Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--yes",
        "--base_name",
        "JKMR",
        "--form_name",
        "BB - SITE VISIT RECORDS (IMPORT)",
        "--source_dir",
        "new_files\\JKMR_SV\\new_records",
        "--type",
        "site_visits"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },

    // IPMR Import
    {
      "label": "IPMR Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--base_name",
        "IPMR",
        "--yes",
        "--form_name",
        "SURVEY",
        "--source_dir",
        "new_files\\IPMR\\new_records",
        "--type",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "IPMR SV Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--yes",
        "--base_name",
        "IPMR",
        "--form_name",
        "SITE VISIT RECORDS",
        "--source_dir",
        "new_files\\IPMR_SV\\new_records",
        "--type",
        "site_visits"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },

    // S Import
    {
      "label": "S Import",
      "command": "python",
      "type": "process",
      "args": [
        "import_api.py",
        "--base_name",
        "S",
        "--yes",
        "--form_name",
        "SURVEY",
        "--source_dir",
        "new_files\\S\\new_records",
        "--type",
        "survey"
      ],
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": []
    },

    // Sequential Imports
    {
      "label": "Run KSMP Import",
      "dependsOn": ["KSMP Import", "SV Import"],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },
    {
      "label": "Run JKMR Import",
      "dependsOn": ["JKMR Import", "JKMR SV Import"],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },
    {
      "label": "Run KSMP & JKMR Imports",
      "dependsOn": ["Run KSMP Import", "Run JKMR Import"],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },
    {
      "label": "Run IPMR & S Transformation & Imports",
      "dependsOn": [
        "Full S Transformation",
        "S Import",
        "Full IPMR Transformation",
        "IPMR Import"
      ],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },
    {
      "label": "Run IPMR & IPMR SV & S Transformation & Imports",
      "dependsOn": [
        "Full S Transformation",
        "S Import",
        "Full IPMR Transformation",
        "IPMR Import",
        "Full IPMR SV Transformation",
        "IPMR SV Import"
      ],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },

    // Duplications
    {
      "label": "Duplicate CLIENT app",
      "command": "python",
      "type": "process",
      "args": [
        "duplicate_app.py",
        "--yes",
        "--name",
        "CLIENT",
        "--postfix",
        " - IMPORT (DO NOT USE)"
      ]
    },
    {
      "label": "Duplicate SITE DETAILS app",
      "command": "python",
      "type": "process",
      "args": [
        "duplicate_app.py",
        "--yes",
        "--name",
        "SITE DETAILS",
        "--postfix",
        " - IMPORT (DO NOT USE)"
      ]
    },
    {
      "label": "Duplicate SURVEY app",
      "command": "python",
      "type": "process",
      "args": [
        "duplicate_app.py",
        "--yes",
        "--name",
        "SURVEY",
        "--postfix",
        " - IMPORT (DO NOT USE)"
      ]
    },
    {
      "label": "Duplicate SITE VISIT RECORDS app",
      "command": "python",
      "type": "process",
      "args": [
        "duplicate_app.py",
        "--yes",
        "--name",
        "SITE VISIT RECORDS",
        "--postfix",
        " - IMPORT (DO NOT USE)"
      ]
    },

    {
      "label": "Run all duplications (sequentially)",
      "dependsOn": [
        "Duplicate CLIENT app",
        "Duplicate SITE DETAILS app",
        "Duplicate SURVEY app",
        "Duplicate SITE VISIT RECORDS app"
      ],
      "dependsOrder": "sequence",
      "problemMatcher": []
    },

    // Specific
    {
      "label": "Duplicate SITE VISIT RECORDS app (BACKUP 2)",
      "command": "python",
      "type": "process",
      "args": [
        "duplicate_app.py",
        "--yes",
        "--name",
        "SITE VISIT RECORDS",
        "--postfix",
        " (BACKUP 2)"
      ]
    },
    {
      "label": "Update SITE VISIT RECORDS records",
      "command": "python",
      "type": "process",
      "args": ["update_records.py", "--form_name", "SITE VISIT RECORDS"]
    },
    {
      "label": "Run duplicate and update (SITE VISIT RECORDS)",
      "dependsOn": [
        "Duplicate SITE VISIT RECORDS app (BACKUP 2)",
        "Update SITE VISIT RECORDS records"
      ],
      "dependsOrder": "sequence",
      "problemMatcher": []
    }
  ]
}
